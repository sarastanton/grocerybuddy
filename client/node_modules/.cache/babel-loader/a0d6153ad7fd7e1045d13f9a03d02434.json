{"ast":null,"code":"import _slicedToArray from \"/Users/sara/Documents/Documents/Coding/Projects/grocery-buddy/grocery-buddy-client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/sara/Documents/Documents/Coding/Projects/grocery-buddy/grocery-buddy-client/src/components/dashboard/Dashboard.js\";\nimport React, { useState, useEffect } from 'react';\nimport { StatCard, ListCard } from './Cards';\n\nconst Dashboard = () => {\n  const _useState = useState([999]),\n        _useState2 = _slicedToArray(_useState, 2),\n        stats = _useState2[0],\n        setStats = _useState2[1];\n\n  useEffect(() => {\n    const fetchStats = async () => {\n      try {\n        const stats = await fetch(`http://saras-grocery-buddy.herokuapp.com//api/stats`).then(response => {\n          return response.json();\n        });\n        setStats(stats.data);\n      } catch (e) {\n        console.log(e);\n      }\n    };\n\n    fetchStats();\n  }, []);\n\n  if (!stats) {\n    return React.createElement(\"div\", {\n      class: \"alert alert-danger\",\n      role: \"alert\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, \"Something went wrong - please try again\");\n  } else {\n    return React.createElement(\"div\", {\n      className: \"dashboard-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, stats.map(stat => {\n      if (stat.type === \"list\") {\n        return React.createElement(ListCard, {\n          title: stat.title,\n          data: stat.data,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33\n          },\n          __self: this\n        });\n      } else {\n        return React.createElement(StatCard, {\n          title: stat.title,\n          type: stat.type,\n          data: stat.data,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35\n          },\n          __self: this\n        });\n      }\n    }));\n  }\n};\n\nexport default Dashboard;","map":{"version":3,"sources":["/Users/sara/Documents/Documents/Coding/Projects/grocery-buddy/grocery-buddy-client/src/components/dashboard/Dashboard.js"],"names":["React","useState","useEffect","StatCard","ListCard","Dashboard","stats","setStats","fetchStats","fetch","then","response","json","data","e","console","log","map","stat","type","title"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,QAAT,EAAmBC,QAAnB,QAAmC,SAAnC;;AAEA,MAAMC,SAAS,GAAG,MAAM;AAAA,oBACIJ,QAAQ,CAAC,CAAC,GAAD,CAAD,CADZ;AAAA;AAAA,QACfK,KADe;AAAA,QACRC,QADQ;;AAGtBL,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMM,UAAU,GAAG,YAAY;AAC7B,UAAI;AACF,cAAMF,KAAK,GAAG,MAAMG,KAAK,CAAE,qDAAF,CAAL,CACnBC,IADmB,CACbC,QAAD,IAAc;AAClB,iBAAOA,QAAQ,CAACC,IAAT,EAAP;AACD,SAHmB,CAApB;AAIAL,QAAAA,QAAQ,CAACD,KAAK,CAACO,IAAP,CAAR;AACD,OAND,CAME,OAAMC,CAAN,EAAS;AACTC,QAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACD;AACF,KAVD;;AAWAN,IAAAA,UAAU;AACX,GAbQ,EAaN,EAbM,CAAT;;AAeE,MAAI,CAACF,KAAL,EAAY;AACV,WACE;AAAK,MAAA,KAAK,EAAC,oBAAX;AAAgC,MAAA,IAAI,EAAC,OAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iDADF;AAKD,GAND,MAMO;AACL,WACE;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGA,KAAK,CAACW,GAAN,CAAUC,IAAI,IAAI;AACjB,UAAIA,IAAI,CAACC,IAAL,KAAc,MAAlB,EAA0B;AACxB,eAAO,oBAAC,QAAD;AAAU,UAAA,KAAK,EAAED,IAAI,CAACE,KAAtB;AAA6B,UAAA,IAAI,EAAEF,IAAI,CAACL,IAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,OAFD,MAEO;AACL,eAAO,oBAAC,QAAD;AAAU,UAAA,KAAK,EAAEK,IAAI,CAACE,KAAtB;AAA6B,UAAA,IAAI,EAAEF,IAAI,CAACC,IAAxC;AAA8C,UAAA,IAAI,EAAED,IAAI,CAACL,IAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;AACF,KANA,CADH,CADF;AAWD;AAEJ,CAtCD;;AAwCA,eAAeR,SAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { StatCard, ListCard } from './Cards'\n\nconst Dashboard = () => {\n  const [stats, setStats] = useState([999]);\n\n  useEffect(() => {\n    const fetchStats = async () => {\n      try {\n        const stats = await fetch(`http://saras-grocery-buddy.herokuapp.com//api/stats`)\n        .then((response) => {\n          return response.json();\n        });\n        setStats(stats.data);\n      } catch(e) {\n        console.log(e);\n      }\n    };\n    fetchStats();\n  }, []);\n\n    if (!stats) {\n      return (\n        <div class=\"alert alert-danger\" role=\"alert\">\n          Something went wrong - please try again\n        </div>\n      )\n    } else {\n      return (\n        <div className=\"dashboard-container\">\n          {stats.map(stat => {\n            if (stat.type === \"list\") {\n              return <ListCard title={stat.title} data={stat.data} />\n            } else {\n              return <StatCard title={stat.title} type={stat.type} data={stat.data} />\n            }\n          })}\n        </div>\n      )\n    }\n\n}\n\nexport default Dashboard;\n"]},"metadata":{},"sourceType":"module"}