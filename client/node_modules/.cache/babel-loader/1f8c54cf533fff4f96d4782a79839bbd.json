{"ast":null,"code":"var _jsxFileName = \"/Users/sara/Documents/Documents/Coding/Projects/grocery-buddy/grocery-buddy-client/src/components/manage/Table.js\";\nimport React, { Component } from 'react';\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport Row from './Row';\n\nclass Table extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      items: Array.from({\n        length: 20\n      }),\n      hasMore: true\n    };\n\n    this.fetchMoreData = () => {\n      if (this.state.items.length >= 500) {\n        this.setState({\n          hasMore: false\n        });\n        return;\n      }\n    };\n  }\n\n  componentDidMount() {\n    fetch('http://localhost:3000/items').then(response => {\n      return response.json();\n    }).then(items => {\n      // debugger\n      this.setState({\n        items: items\n      });\n    });\n  }\n\n  render() {\n    return React.createElement(\"table\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, \" Date \"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, \" Description \"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, \" Price \")), this.state.items.map(item => React.createElement(Row, {\n      date: item[\"date\"],\n      description: item[\"description\"],\n      price: item[\"price\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default Table;","map":{"version":3,"sources":["/Users/sara/Documents/Documents/Coding/Projects/grocery-buddy/grocery-buddy-client/src/components/manage/Table.js"],"names":["React","Component","InfiniteScroll","Row","Table","state","items","Array","from","length","hasMore","fetchMoreData","setState","componentDidMount","fetch","then","response","json","render","map","item"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,cAAP,MAA2B,iCAA3B;AACA,OAAOC,GAAP,MAAgB,OAAhB;;AAEA,MAAMC,KAAN,SAAoBH,SAApB,CAA8B;AAAA;AAAA;AAAA,SAC5BI,KAD4B,GACpB;AACNC,MAAAA,KAAK,EAAEC,KAAK,CAACC,IAAN,CAAW;AAAEC,QAAAA,MAAM,EAAE;AAAV,OAAX,CADD;AAENC,MAAAA,OAAO,EAAE;AAFH,KADoB;;AAAA,SAM5BC,aAN4B,GAMZ,MAAM;AACpB,UAAI,KAAKN,KAAL,CAAWC,KAAX,CAAiBG,MAAjB,IAA2B,GAA/B,EAAoC;AAClC,aAAKG,QAAL,CAAc;AAAEF,UAAAA,OAAO,EAAE;AAAX,SAAd;AACA;AACD;AACF,KAX2B;AAAA;;AAa5BG,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,KAAK,CAAC,6BAAD,CAAL,CACGC,IADH,CACSC,QAAD,IAAc;AAClB,aAAOA,QAAQ,CAACC,IAAT,EAAP;AACD,KAHH,EAIGF,IAJH,CAIST,KAAD,IAAW;AACf;AACA,WAAKM,QAAL,CAAc;AAAEN,QAAAA,KAAK,EAAEA;AAAT,OAAd;AACD,KAPH;AAQD;;AAEDY,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAHF,CADF,EAMG,KAAKb,KAAL,CAAWC,KAAX,CAAiBa,GAAjB,CAAsBC,IAAD,IACpB,oBAAC,GAAD;AAAK,MAAA,IAAI,EAAEA,IAAI,CAAC,MAAD,CAAf;AAAyB,MAAA,WAAW,EAAEA,IAAI,CAAC,aAAD,CAA1C;AAA2D,MAAA,KAAK,EAAEA,IAAI,CAAC,OAAD,CAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CANH,CADF;AAYD;;AArC2B;;AAyC9B,eAAehB,KAAf","sourcesContent":["import React, { Component } from 'react';\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport Row from './Row'\n\nclass Table extends Component {\n  state = {\n    items: Array.from({ length: 20 }),\n    hasMore: true\n  }\n\n  fetchMoreData = () => {\n    if (this.state.items.length >= 500) {\n      this.setState({ hasMore: false });\n      return;\n    }\n  }\n\n  componentDidMount() {\n    fetch('http://localhost:3000/items')\n      .then((response) => {\n        return response.json();\n      })\n      .then((items) => {\n        // debugger\n        this.setState({ items: items })\n      })\n  }\n\n  render() {\n    return (\n      <table>\n        <tr>\n          <th> Date </th>\n          <th> Description </th>\n          <th> Price </th>\n        </tr>\n        {this.state.items.map((item) => (\n          <Row date={item[\"date\"]} description={item[\"description\"]} price={item[\"price\"]} />\n        ))}\n      </table>\n    );\n  }\n\n}\n\nexport default Table;\n"]},"metadata":{},"sourceType":"module"}